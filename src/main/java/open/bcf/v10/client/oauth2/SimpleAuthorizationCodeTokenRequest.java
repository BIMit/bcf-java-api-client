package open.bcf.v10.client.oauth2;

import com.google.api.client.auth.oauth2.AuthorizationCodeTokenRequest;
import com.google.api.client.auth.oauth2.ClientParametersAuthentication;
import com.google.api.client.http.GenericUrl;
import com.google.api.client.http.HttpExecuteInterceptor;
import com.google.api.client.http.HttpRequestInitializer;
import com.google.api.client.http.HttpTransport;
import com.google.api.client.json.JsonFactory;

import java.util.Collection;

public class SimpleAuthorizationCodeTokenRequest extends AuthorizationCodeTokenRequest {

    /**
     * @param transport HTTP transport
     * @param jsonFactory JSON factory
     * @param tokenServerUrl token server URL
     * @param code authorization code generated by the authorization server
     */
    public SimpleAuthorizationCodeTokenRequest(
            HttpTransport transport, JsonFactory jsonFactory, GenericUrl tokenServerUrl, String code) {
        super(transport, jsonFactory, tokenServerUrl, "authorization_code");
        setCode(code);
    }

    @Override
    public SimpleAuthorizationCodeTokenRequest setRequestInitializer(
            HttpRequestInitializer requestInitializer) {
        return this;
    }

    @Override
    public SimpleAuthorizationCodeTokenRequest setTokenServerUrl(GenericUrl tokenServerUrl) {
        return (SimpleAuthorizationCodeTokenRequest) super.setTokenServerUrl(tokenServerUrl);
    }

    @Override
    public SimpleAuthorizationCodeTokenRequest setScopes(Collection<String> scopes) {
        return this;
    }

    @Override
    public SimpleAuthorizationCodeTokenRequest setGrantType(String grantType) {
        return (SimpleAuthorizationCodeTokenRequest) super.setGrantType(grantType);
    }

    @Override
    public SimpleAuthorizationCodeTokenRequest setRedirectUri(String redirectUri) {
        return this;
    }
    @Override
    public SimpleAuthorizationCodeTokenRequest setClientAuthentication(
            HttpExecuteInterceptor clientAuthentication) {
        ClientParametersAuthentication cpa = (ClientParametersAuthentication) clientAuthentication;
        return (SimpleAuthorizationCodeTokenRequest) super.setClientAuthentication(new CustomClientAuthentication(cpa.getClientId(), cpa.getClientSecret()));
    }

}
